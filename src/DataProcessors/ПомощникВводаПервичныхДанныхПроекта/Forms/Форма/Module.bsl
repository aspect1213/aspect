#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ДатаОбработки = ТекущаяДата();
	ВыполнитьДо = ДатаОбработки + 3600 * 24 * 3;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

&НаКлиенте
Процедура ВыполнитьОбработку(Команда)
	
	Отказ = ВыполнитьПроверкуЗаполненияРеквизитов();
	Если НЕ Отказ Тогда
		Если СоздатьДокументСогласования Тогда
			СоздатьДокументСогласованияНаСервере();
		КонецЕсли;
		Если СоздатьДокументВыполненияРаботНадПроектом Тогда
			СоздатьДокументВыполненияРаботНадПроектомНаСервере();
		КонецЕсли;
		Если СоздатьДокументВыполненияПроектов Тогда
			СоздатьДокументВыполненияПроектовНаСервере();
		КонецЕсли;
		Если СоздатьДокументПоступлениеОплаты Тогда
			СоздатьДокументПоступлениеОплатыНаСервере();
		КонецЕсли;
		Предупреждение("Создание документов завершено. Форма будет закрыта...");
		ЭтаФорма.Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьДокументСогласованияПриИзменении(Элемент)
	
	Элементы.РуководительПроекта.Доступность     = СоздатьДокументСогласования;
	Элементы.ВыполнитьДо.Доступность             = СоздатьДокументСогласования;
	Элементы.ВремяВыполнения_План.Доступность    = СоздатьДокументСогласования;
	Элементы.Сумма.Доступность                   = СоздатьДокументСогласования;
	Элементы.КомментарийСогласования.Доступность = СоздатьДокументСогласования;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьДокументВыполненияРаботНадПроектомПриИзменении(Элемент)
	
	Элементы.ВремяВыполнения_Факт.Доступность                  = СоздатьДокументВыполненияРаботНадПроектом;
	Элементы.КомментарийВыполненияРаботНадПроектом.Доступность = СоздатьДокументВыполненияРаботНадПроектом;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьДокументВыполненияПроектовПриИзменении(Элемент)
	
	Элементы.КомментарийВыполненияПроектов.Доступность = СоздатьДокументВыполненияПроектов;
	
КонецПроцедуры

&НаКлиенте
Процедура ВремяВыполнения_ПланПриИзменении(Элемент)
	
	ВремяВыполненияЧисло = УП_ОбщегоНазначения_Сервер.ПреобразоватьВремя(ВремяВыполнения_План);
	Сумма = ВремяВыполненияЧисло / 60 * УП_РаботаСДокументамиСервер.ПолучитьСтоимостьЧасаРаботыКонтрагента(ДатаОбработки, Объект.Контрагент);
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаОбработкиПриИзменении(Элемент)
	
	ВыполнитьДо = ДатаОбработки + 3600 * 24 * 3;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьДокументПоступлениеОплатыПриИзменении(Элемент)
	
	Элементы.СпособОплаты.Доступность                 = СоздатьДокументПоступлениеОплаты;
	Элементы.КомментарийПоступлениеОплаты.Доступность = СоздатьДокументПоступлениеОплаты;
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.Контрагент) Тогда
		СтоимостьЧасаРаботы = УП_РаботаСДокументамиСервер.ПолучитьСтоимостьЧасаРаботыКонтрагента(ДатаОбработки, Объект.Контрагент);
		Элементы.ДекорацияНадписьСтоимостьЧасаРаботы.Заголовок = "Стоимость часа работы: " + Строка(СтоимостьЧасаРаботы) + " руб.";
	Иначе
		Элементы.ДекорацияНадписьСтоимостьЧасаРаботы.Заголовок = "";
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ПрочиеОбработчики

&НаКлиенте
Функция ВыполнитьПроверкуЗаполненияРеквизитов()
	
	Отказ = Ложь;
	Если НЕ ЗначениеЗаполнено(Объект.Контрагент) Тогда
		ВыдатьСообщениеПользователюСПривязкойКРеквизиту("Объект.Контрагент", "Контрагент");
		Отказ = Истина;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Объект.Клиент) Тогда
		ВыдатьСообщениеПользователюСПривязкойКРеквизиту("Объект.Клиент", "Клиент");
		Отказ = Истина;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Объект.Проект) Тогда
		ВыдатьСообщениеПользователюСПривязкойКРеквизиту("Объект.Проект", "Проект");
		Отказ = Истина;
	КонецЕсли;
	
	Если СоздатьДокументСогласования Тогда
		Если НЕ ЗначениеЗаполнено(РуководительПроекта) Тогда
			ВыдатьСообщениеПользователюСПривязкойКРеквизиту("РуководительПроекта", "Руководитель проекта");
			Отказ = Истина;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ВыполнитьДо) Тогда
			ВыдатьСообщениеПользователюСПривязкойКРеквизиту("ВыполнитьДо", "Выполнить до");
			Отказ = Истина;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ВремяВыполнения_План) Тогда
			ВыдатьСообщениеПользователюСПривязкойКРеквизиту("ВремяВыполнения_План", "Время выполнения (согласование)");
			Отказ = Истина;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(Сумма) Тогда
			ВыдатьСообщениеПользователюСПривязкойКРеквизиту("СтоимостьПроекта", "Стоимость проекта");
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
	Если СоздатьДокументВыполненияРаботНадПроектом Тогда
		Если НЕ ЗначениеЗаполнено(ВремяВыполнения_Факт) Тогда
			ВыдатьСообщениеПользователюСПривязкойКРеквизиту("ВремяВыполнения_Факт", "Время выполнения (выполнение работ)");
			Отказ = Истина;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(КомментарийВыполненияРаботНадПроектом) Тогда
			ВыдатьСообщениеПользователюСПривязкойКРеквизиту("КомментарийВыполненияРаботНадПроектом", "Комментарий (выполнение работ над проектом)");
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
	Если СоздатьДокументПоступлениеОплаты Тогда
		Если НЕ ЗначениеЗаполнено(СпособОплаты) Тогда
			ВыдатьСообщениеПользователюСПривязкойКРеквизиту("СпособОплаты", "Способ оплаты");
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ СоздатьДокументСогласования
		И НЕ СоздатьДокументВыполненияРаботНадПроектом
		И НЕ СоздатьДокументВыполненияПроектов
		И НЕ СоздатьДокументПоступлениеОплаты Тогда
		Сообщение       = Новый СообщениеПользователю;
		Сообщение.Текст = "Необходимо указать создание одного из документов...";
		Сообщение.Сообщить();
		Отказ = Истина;
	КонецЕсли;
	
	Возврат Отказ;
	
КонецФункции

&НаКлиенте
Процедура ВыдатьСообщениеПользователюСПривязкойКРеквизиту(РеквизитФормы, РеквизитСтрока)
	
	Сообщение       = Новый СообщениеПользователю;
	Сообщение.Текст = Строка(РеквизитСтрока) + " не заполнен";
	Сообщение.Поле  = Строка(РеквизитФормы);
	Сообщение.УстановитьДанные(Объект);
	Сообщение.Сообщить();
	
КонецПроцедуры

&НаСервере
Процедура СоздатьДокументСогласованияНаСервере()
	
	НовыйДокумент            = Документы.СогласованиеПроектов.СоздатьДокумент();
	НовыйДокумент.Дата       = ДатаОбработки;
	НовыйДокумент.Контрагент = Объект.Контрагент;
	
	// контактное лицо
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	КонтактныеЛица.Ссылка
	|ИЗ
	|	Справочник.КонтактныеЛица КАК КонтактныеЛица
	|ГДЕ
	|	КонтактныеЛица.Владелец = &Владелец
	|	И КонтактныеЛица.Основной";
	Запрос.УстановитьПараметр("Владелец", Объект.Контрагент);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НовыйДокумент.КонтактноеЛицо = Выборка.Ссылка;
	КонецЦикла;
	НовыйДокумент.Ответственный = ПараметрыСеанса.ТекущийПользователь;
	НовыйДокумент.Комментарий = "#Создано обработкой ""Помощник ввода первичных данных проекта""";
	
	// проект
	НовыйПроект                     = НовыйДокумент.Проекты.Добавить();
	НовыйПроект.Клиент              = Объект.Клиент;
	НовыйПроект.Проект              = Объект.Проект;
	НовыйПроект.Валюта              = УП_РаботаСДокументамиСервер.ПолучитьВалютуУчета();
	НовыйПроект.РуководительПроекта = РуководительПроекта;
	НовыйПроект.ВремяВыполнения     = ВремяВыполнения_План;
	НовыйПроект.ВыполнитьДо         = ВыполнитьДо;
	НовыйПроект.Сумма               = Сумма;
	НовыйПроект.Комментарий         = КомментарийСогласования;
	
	// исполнитель
	НовыйИсполнитель             = НовыйДокумент.Исполнители.Добавить();
	НовыйИсполнитель.Клиент      = Объект.Клиент;
	НовыйИсполнитель.Проект      = Объект.Проект;
	НовыйИсполнитель.Исполнитель = ПолучитьТекущегоИсполнителяНаСервере();
	Попытка
		НовыйДокумент.Записать(РежимЗаписиДокумента.Проведение);
		Сообщение       = Новый СообщениеПользователю;
		Сообщение.Текст = "Создан документ """ + Строка(НовыйДокумент) + """";
		Сообщение.Сообщить();
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьТекущегоИсполнителяНаСервере()
	
	Исполнитель = Справочники.Исполнители.ПустаяСсылка();
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Исполнители.Ссылка
	|ИЗ
	|	Справочник.Исполнители КАК Исполнители
	|ГДЕ
	|	Исполнители.ФизическоеЛицо = &ФизическоеЛицо";
	Запрос.УстановитьПараметр("ФизическоеЛицо", ПараметрыСеанса.ТекущийПользователь.ФизическоеЛицо);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Исполнитель = Выборка.Ссылка;
	КонецЦикла;
	Возврат Исполнитель;
	
КонецФункции

&НаСервере
Процедура СоздатьДокументВыполненияРаботНадПроектомНаСервере()
	
	НовыйДокумент               = Документы.ВыполнениеРаботНадПроектом.СоздатьДокумент();
	НовыйДокумент.Дата          = ДатаОбработки + 1;
	НовыйДокумент.Контрагент    = Объект.Контрагент;
	НовыйДокумент.Исполнитель   = ПолучитьТекущегоИсполнителяНаСервере();
	НовыйДокумент.Ответственный = ПараметрыСеанса.ТекущийПользователь;
	НовыйДокумент.Комментарий   = "#Создано обработкой ""Помощник ввода первичных данных проекта""";
	
	// проект
	НовыйПроект                 = НовыйДокумент.Проекты.Добавить();
	НовыйПроект.Клиент          = Объект.Клиент;
	НовыйПроект.Проект          = Объект.Проект;
	НовыйПроект.ВремяВыполнения = ВремяВыполнения_Факт;
	НовыйПроект.Комментарий     = КомментарийВыполненияРаботНадПроектом;
	
	Попытка
		НовыйДокумент.Записать(РежимЗаписиДокумента.Проведение);
		Сообщение       = Новый СообщениеПользователю;
		Сообщение.Текст = "Создан документ """ + Строка(НовыйДокумент) + """";
		Сообщение.Сообщить();
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Процедура СоздатьДокументВыполненияПроектовНаСервере()
	
	НовыйДокумент               = Документы.ВыполнениеПроектов.СоздатьДокумент();
	НовыйДокумент.Дата          = ДатаОбработки + 2;
	НовыйДокумент.Контрагент    = Объект.Контрагент;
	НовыйДокумент.Ответственный = ПараметрыСеанса.ТекущийПользователь;
	НовыйДокумент.Комментарий   = "#Создано обработкой ""Помощник ввода первичных данных проекта""";
	
	// проект
	НовыйПроект             = НовыйДокумент.Проекты.Добавить();
	НовыйПроект.Клиент      = Объект.Клиент;
	НовыйПроект.Проект      = Объект.Проект;
	НовыйПроект.Валюта      = УП_РаботаСДокументамиСервер.ПолучитьВалютуУчета();
	НовыйПроект.Сумма       = Сумма;
	НовыйПроект.Комментарий = КомментарийВыполненияПроектов;
	
	Попытка
		НовыйДокумент.Записать(РежимЗаписиДокумента.Проведение);
		Сообщение       = Новый СообщениеПользователю;
		Сообщение.Текст = "Создан документ """ + Строка(НовыйДокумент) + """";
		Сообщение.Сообщить();
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Процедура СоздатьДокументПоступлениеОплатыНаСервере()
	
	НовыйДокумент                = Документы.ПоступлениеОплатыОтКонтрагента.СоздатьДокумент();
	НовыйДокумент.Дата           = ДатаОбработки + 3;
	НовыйДокумент.Контрагент     = Объект.Контрагент;
	НовыйДокумент.СпособОплаты   = СпособОплаты;
	НовыйДокумент.СуммаДокумента = Сумма;
	НовыйДокумент.Ответственный  = ПараметрыСеанса.ТекущийПользователь;
	НовыйДокумент.Комментарий    = "#Создано обработкой ""Помощник ввода первичных данных проекта""";
	
	// проект
	НовыйПроект             = НовыйДокумент.Проекты.Добавить();
	НовыйПроект.Клиент      = Объект.Клиент;
	НовыйПроект.Проект      = Объект.Проект;
	НовыйПроект.Валюта      = УП_РаботаСДокументамиСервер.ПолучитьВалютуУчета();
	НовыйПроект.Сумма       = Сумма;
	НовыйПроект.Комментарий = КомментарийПоступлениеОплаты;
	
	Попытка
		НовыйДокумент.Записать(РежимЗаписиДокумента.Проведение);
		Сообщение       = Новый СообщениеПользователю;
		Сообщение.Текст = "Создан документ """ + Строка(НовыйДокумент) + """";
		Сообщение.Сообщить();
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти