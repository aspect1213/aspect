//////////////////////////////////////////////////////////////////////////////////
//// РАЗДЕЛ ПРОЦЕДУР И ФУНКЦИЙ

// Обработка проведения документа.
// ................................................................................
Процедура ОбработкаПроведения(Отказ, Режим)
	
	ВалютаУчета = Константы.ВалютаУчета.Получить();
	
	// регистр ВзаиморасчетыСКонтрагентами Расход
	Движения.ВзаиморасчетыСКонтрагентами.Записывать = Истина;
	Для каждого ТекСтрока Из Проекты Цикл
		Если ЗначениеЗаполнено(ТекСтрока.Проект) Тогда
			Движение                      = Движения.ВзаиморасчетыСКонтрагентами.Добавить();
			Движение.ВидДвижения          = ВидДвиженияНакопления.Расход;
			Движение.Период               = Дата;
			Движение.Контрагент           = Контрагент;
			Движение.ВалютаВзаиморасчетов = ТекСтрока.Валюта;
			Движение.ВалютаУчета          = ВалютаУчета;
			Движение.Проект               = ТекСтрока.Проект;
			Движение.СуммаВзаиморасчетов  = ТекСтрока.Сумма;
			Движение.СуммаВВалютеУчета    = ТекСтрока.Сумма * УП_ОбщегоНазначения_Сервер.ПолучитьАктуальныйКурсВалюты(Дата, ТекСтрока.Валюта);
		КонецЕсли;
	КонецЦикла;
	
	// регистр УП_СостоянияПроектов Приход
	Движения.УП_СостоянияПроектов.Записывать = Истина;
	
	// очистим движения текущего документа
	Движения.УП_РасчетыСКонтрагентами.Очистить();
	Движения.УП_РасчетыСКонтрагентами.Записать();
	
	Движения.УП_СостоянияПроектов.Очистить();
	Движения.УП_СостоянияПроектов.Записать();
	Для Каждого ТекСтрокаПроекты Из Проекты Цикл
		ПараметрыАналитики = Новый Структура();
		ПараметрыАналитики.Вставить("Контрагент", Контрагент);
		ПараметрыАналитики.Вставить("Клиент"    , ТекСтрокаПроекты.Клиент);
		ПараметрыАналитики.Вставить("Проект"    , ТекСтрокаПроекты.Проект);
		АналитикаУчетаПоКонтрагентам = УП_РаботаСДокументамиСервер.ЗначениеКлючаАналитики(ПараметрыАналитики);
		
		Если АналитикаУчетаПоКонтрагентам = Неопределено Тогда
			Продолжить;
			Отказ = Истина;
			Сообщить("Не удалось определить аналитику учета по контрагенту. Строка: " + Строка(ТекСтрокаПроекты.НомерСтроки));
		КонецЕсли;
		ЗапросВыполненныхПроектов = Новый Запрос;
		ЗапросВыполненныхПроектов.Текст =
		"ВЫБРАТЬ
		|	УП_СостоянияПроектов.АналитикаУчетаПоКонтрагентам
		|ИЗ
		|	РегистрСведений.УП_СостоянияПроектов КАК УП_СостоянияПроектов
		|ГДЕ
		|	УП_СостоянияПроектов.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияПроектов.Выполнен)
		|	И УП_СостоянияПроектов.Период < &МоментВремени
		|	И УП_СостоянияПроектов.АналитикаУчетаПоКонтрагентам = &АналитикаУчетаПоКонтрагентам";
		ЗапросВыполненныхПроектов.УстановитьПараметр("МоментВремени"               , Дата);
		ЗапросВыполненныхПроектов.УстановитьПараметр("АналитикаУчетаПоКонтрагентам", АналитикаУчетаПоКонтрагентам);
		РезультатЗапросаВыполненныхПроектов = ЗапросВыполненныхПроектов.Выполнить();
		Если НЕ РезультатЗапросаВыполненныхПроектов.Пустой() Тогда
			ЗапросЗакрытыхПроектов = Новый Запрос;
			ЗапросЗакрытыхПроектов.Текст =
			"ВЫБРАТЬ
			|	УП_СостоянияПроектовСрезПоследних.АналитикаУчетаПоКонтрагентам
			|ИЗ
			|	РегистрСведений.УП_СостоянияПроектов.СрезПоследних(
			|			&МоментВремени,
			|			АналитикаУчетаПоКонтрагентам = &АналитикаУчетаПоКонтрагентам
			|				И Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияПроектов.Закрыт)) КАК УП_СостоянияПроектовСрезПоследних";
			ЗапросЗакрытыхПроектов.УстановитьПараметр("МоментВремени"               , ?(Режим = РежимПроведенияДокумента.Оперативный, Неопределено, МоментВремени()));
			ЗапросЗакрытыхПроектов.УстановитьПараметр("АналитикаУчетаПоКонтрагентам", АналитикаУчетаПоКонтрагентам);
			РезультатЗапросаЗакрытыхПроектов = ЗапросЗакрытыхПроектов.Выполнить();
			Если НЕ РезультатЗапросаЗакрытыхПроектов.Пустой() Тогда
				Сообщить("Проект " + Строка(ТекСтрокаПроекты.Проект) + " уже является закрытым. Убедитесь, что время документа правильное. Строка: " + Строка(ТекСтрокаПроекты.НомерСтроки));
				Отказ = Истина;
			КонецЕсли;
			
			Запрос = Новый Запрос;
			Запрос.Текст =
			"ВЫБРАТЬ
			|	СУММА(УП_РасчетыСКонтрагентамиОстатки.СуммаОстаток) КАК ДолгКонтрагента
			|ИЗ
			|	РегистрНакопления.УП_РасчетыСКонтрагентами.Остатки(&МоментВремени, АналитикаУчетаПоКонтрагентам = &АналитикаУчетаПоКонтрагентам) КАК УП_РасчетыСКонтрагентамиОстатки";
			Запрос.УстановитьПараметр("МоментВремени"               , ?(Режим = РежимПроведенияДокумента.Оперативный, Неопределено, МоментВремени()));
			Запрос.УстановитьПараметр("АналитикаУчетаПоКонтрагентам", АналитикаУчетаПоКонтрагентам);
			РезультатЗапроса = Запрос.Выполнить();
			Выборка = РезультатЗапроса.Выбрать();
			Выборка.Следующий();
			ДолгКонтрагентаПоПроекту = Выборка.ДолгКонтрагента;
			Если ТекСтрокаПроекты.Сумма >= ДолгКонтрагентаПоПроекту Тогда
				Движение                              = Движения.УП_СостоянияПроектов.Добавить();
				Движение.Период                       = Дата;
				Движение.АналитикаУчетаПоКонтрагентам = АналитикаУчетаПоКонтрагентам;
				Движение.Состояние                    = Перечисления.СостоянияПроектов.Закрыт;
			КонецЕсли;
			Если НЕ Отказ Тогда
				Движения.УП_СостоянияПроектов.Записывать = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	// регистр УП_ВзаиморасчетыСКонтрагентами Приход
	Движения.УП_РасчетыСКонтрагентами.Записывать = Истина;
	Для Каждого ТекСтрокаПроекты Из Проекты Цикл
		ПараметрыАналитики = Новый Структура();
		ПараметрыАналитики.Вставить("Контрагент", Контрагент);
		ПараметрыАналитики.Вставить("Клиент"    , ТекСтрокаПроекты.Клиент);
		ПараметрыАналитики.Вставить("Проект"    , ТекСтрокаПроекты.Проект);
		
		Движение                              = Движения.УП_РасчетыСКонтрагентами.Добавить();
		Движение.ВидДвижения                  = ВидДвиженияНакопления.Расход;
		Движение.Период                       = Дата;
		Движение.АналитикаУчетаПоКонтрагентам = УП_РаботаСДокументамиСервер.ЗначениеКлючаАналитики(ПараметрыАналитики);
		Движение.Валюта                       = ТекСтрокаПроекты.Валюта;
		Движение.Сумма                        = ТекСтрокаПроекты.Сумма;
	КонецЦикла;
	
КонецПроцедуры

// Обработка события "при записи".
// ................................................................................
Процедура ПриЗаписи(Отказ)
	
	ЭтотОбъект.СуммаДокумента = ЭтотОбъект.Проекты.Итог("Сумма");
	
КонецПроцедуры