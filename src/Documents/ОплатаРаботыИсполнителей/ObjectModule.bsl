//////////////////////////////////////////////////////////////////////////////////
//// РАЗДЕЛ ПРОЦЕДУР И ФУНКЦИЙ

// Обработка проведения документа.
// ................................................................................
Процедура ОбработкаПроведения(Отказ, Режим)
	
	Движения.УП_РасчетыСИсполнителями.Записывать = Истина;
	Движения.УП_СостоянияПроектовИсполнителей.Записывать = Истина;
	Движения.УП_СостоянияПроектов.Записывать = Истина;
	
	Движения.УП_СостоянияПроектовИсполнителей.Очистить();
	Движения.УП_СостоянияПроектовИсполнителей.Записать();
	Для Каждого ТекСтрокаПроекты Из Проекты Цикл
		
		ПараметрыАналитики = Новый Структура();
		ПараметрыАналитики.Вставить("Контрагент", ТекСтрокаПроекты.Контрагент);
		ПараметрыАналитики.Вставить("Клиент"    , ТекСтрокаПроекты.Клиент);
		ПараметрыАналитики.Вставить("Проект"    , ТекСтрокаПроекты.Проект);
		АналитикаУчетаПоКонтрагентам = УП_РаботаСДокументамиСервер.ЗначениеКлючаАналитики(ПараметрыАналитики);
		
		Движение                              = Движения.УП_РасчетыСИсполнителями.Добавить();
		Движение.ВидДвижения                  = ВидДвиженияНакопления.Расход;
		Движение.Период                       = Дата;
		Движение.АналитикаУчетаПоКонтрагентам = АналитикаУчетаПоКонтрагентам;
		Движение.Исполнитель                  = Исполнитель;
		Движение.Сумма                        = ТекСтрокаПроекты.Сумма;
		
		Если ТекСтрокаПроекты.ЗакрытьПроект Тогда
			Движение                              = Движения.УП_СостоянияПроектовИсполнителей.Добавить();
			Движение.Период                       = Дата;
			Движение.АналитикаУчетаПоКонтрагентам = АналитикаУчетаПоКонтрагентам;
			Движение.Исполнитель                  = Исполнитель;
			Движение.Состояние                    = Перечисления.СостоянияПроектов.Закрыт;
			
			Движение                              = Движения.УП_СостоянияПроектов.Добавить();
			Движение.Период                       = Дата;
			Движение.АналитикаУчетаПоКонтрагентам = АналитикаУчетаПоКонтрагентам;
			Движение.Состояние                    = Перечисления.СостоянияПроектов.Закрыт;
		Иначе
			
			ЗапросВыполненныхПроектов = Новый Запрос;
			ЗапросВыполненныхПроектов.Текст =
			"ВЫБРАТЬ
			|	УП_СостоянияПроектов.АналитикаУчетаПоКонтрагентам
			|ИЗ
			|	РегистрСведений.УП_СостоянияПроектовИсполнителей КАК УП_СостоянияПроектов
			|ГДЕ
			|	УП_СостоянияПроектов.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияПроектов.Выполнен)
			|	И УП_СостоянияПроектов.Период < &МоментВремени
			|	И УП_СостоянияПроектов.АналитикаУчетаПоКонтрагентам = &АналитикаУчетаПоКонтрагентам
			|	И УП_СостоянияПроектов.Исполнитель = &Исполнитель";
			ЗапросВыполненныхПроектов.УстановитьПараметр("МоментВремени"               , Дата);
			ЗапросВыполненныхПроектов.УстановитьПараметр("АналитикаУчетаПоКонтрагентам", АналитикаУчетаПоКонтрагентам);
			ЗапросВыполненныхПроектов.УстановитьПараметр("Исполнитель"                 , Исполнитель);
			РезультатЗапросаВыполненныхПроектов = ЗапросВыполненныхПроектов.Выполнить();
			Если НЕ РезультатЗапросаВыполненныхПроектов.Пустой() Тогда
				ЗапросЗакрытыхПроектов = Новый Запрос;
				ЗапросЗакрытыхПроектов.Текст =
				"ВЫБРАТЬ
				|	УП_СостоянияПроектовСрезПоследних.АналитикаУчетаПоКонтрагентам
				|ИЗ
				|	РегистрСведений.УП_СостоянияПроектовИсполнителей.СрезПоследних(
				|			&МоментВремени,
				|			АналитикаУчетаПоКонтрагентам = &АналитикаУчетаПоКонтрагентам
				|				И Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияПроектов.Закрыт)
				|				И Исполнитель = &Исполнитель) КАК УП_СостоянияПроектовСрезПоследних";
				ЗапросЗакрытыхПроектов.УстановитьПараметр("МоментВремени"               , ?(Режим = РежимПроведенияДокумента.Оперативный, Неопределено, МоментВремени()));
				ЗапросЗакрытыхПроектов.УстановитьПараметр("АналитикаУчетаПоКонтрагентам", АналитикаУчетаПоКонтрагентам);
				ЗапросЗакрытыхПроектов.УстановитьПараметр("Исполнитель"                 , Исполнитель);
				РезультатЗапросаЗакрытыхПроектов = ЗапросЗакрытыхПроектов.Выполнить();
				Если НЕ РезультатЗапросаЗакрытыхПроектов.Пустой() Тогда
					Сообщить("Проект " + Строка(ТекСтрокаПроекты.Проект) + " уже является закрытым. Убедитесь, что время документа правильное. Строка: " + Строка(ТекСтрокаПроекты.НомерСтроки));
					Отказ = Истина;
				КонецЕсли;
				
				Запрос = Новый Запрос;
				Запрос.Текст =
				"ВЫБРАТЬ
				|	СУММА(УП_РасчетыСКонтрагентамиОстатки.СуммаОстаток) КАК ДолгКонтрагента
				|ИЗ
				|	РегистрНакопления.УП_РасчетыСИсполнителями.Остатки(
				|			&МоментВремени,
				|			АналитикаУчетаПоКонтрагентам = &АналитикаУчетаПоКонтрагентам
				|				И Исполнитель = &Исполнитель) КАК УП_РасчетыСКонтрагентамиОстатки";
				Запрос.УстановитьПараметр("МоментВремени"               , ?(Режим = РежимПроведенияДокумента.Оперативный, Неопределено, МоментВремени()));
				Запрос.УстановитьПараметр("АналитикаУчетаПоКонтрагентам", АналитикаУчетаПоКонтрагентам);
				Запрос.УстановитьПараметр("Исполнитель"                 , Исполнитель);
				РезультатЗапроса = Запрос.Выполнить();
				Выборка = РезультатЗапроса.Выбрать();
				Выборка.Следующий();
				ДолгКонтрагентаПоПроекту = Выборка.ДолгКонтрагента;
				Если ТекСтрокаПроекты.Сумма >= ДолгКонтрагентаПоПроекту Тогда
					Движение                              = Движения.УП_СостоянияПроектовИсполнителей.Добавить();
					Движение.Период                       = Дата;
					Движение.АналитикаУчетаПоКонтрагентам = АналитикаУчетаПоКонтрагентам;
					Движение.Исполнитель                  = Исполнитель;
					Движение.Состояние                    = Перечисления.СостоянияПроектов.Закрыт;
				КонецЕсли;
				Если НЕ Отказ Тогда
					Движения.УП_СостоянияПроектовИсполнителей.Записывать = Истина;
				КонецЕсли;
			КонецЕсли;		КонецЕсли;
		КонецЦикла;
		
	КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	СуммаДокумента = Проекты.Итог("Сумма");
	
КонецПроцедуры