&НаСервере
Процедура ОбработкаВыбораНаСервере(ВыбранноеЗначение)
	
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	Для каждого ТекСтрока Из ВыбранноеЗначение.Корзина Цикл
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("Клиент", ТекСтрока.Клиент);
		ПараметрыОтбора.Вставить("Проект", ТекСтрока.Проект);
		НайденныеСтроки = ДокументОбъект.Проекты.НайтиСтроки(ПараметрыОтбора);
		Если НайденныеСтроки.Количество() = 0 Тогда
			НоваяСтрока                     = ДокументОбъект.Проекты.Добавить();
			НоваяСтрока.Клиент              = ТекСтрока.Клиент;
			НоваяСтрока.Проект              = ТекСтрока.Проект;
			НоваяСтрока.Валюта              = Константы.ВалютаУчета.Получить();
			НоваяСтрока.ПроектПредставление = ТекСтрока.Проект;
			
			ПараметрыАналитики = Новый Структура();
			ПараметрыАналитики.Вставить("Контрагент", Объект.Контрагент);
			ПараметрыАналитики.Вставить("Клиент"    , ТекСтрока.Клиент);
			ПараметрыАналитики.Вставить("Проект"    , ТекСтрока.Проект);
			АналитикаУчетаПоКонтрагентам = УП_РаботаСДокументамиСервер.ЗначениеКлючаАналитики(ПараметрыАналитики);
			НоваяСтрока.Сумма            = УП_РаботаСДокументамиСервер.ПолучитьТекущуюСтоимостьПроекта(Объект.Дата, АналитикаУчетаПоКонтрагентам);
			НоваяСтрока.ВремяВыполнения  = УП_ОбщегоНазначения_Сервер.ПреобразоватьЧислоВВремя_Строка(УП_РаботаСДокументамиСервер.ПолучитьТекущееВремяВыполнения(Объект.Дата, АналитикаУчетаПоКонтрагентам));
			НоваяСтрока.Цена             = УП_РаботаСДокументамиСервер.ПолучитьСтоимостьЧасаРаботыКонтрагента(Объект.Дата, Объект.Контрагент);
			
			СписокИсполнителей = УП_РаботаСДокументамиСервер.ПолучитьИсполнителейПроекта(АналитикаУчетаПоКонтрагентам);
			Для каждого ТекСтрока_Исполнитель Из СписокИсполнителей Цикл
				НоваяСтрокаИсполнителей                 = ДокументОбъект.Исполнители.Добавить();
				НоваяСтрокаИсполнителей.Клиент          = ТекСтрока.Клиент;
				НоваяСтрокаИсполнителей.Проект          = ТекСтрока.Проект;
				НоваяСтрокаИсполнителей.Исполнитель     = ТекСтрока_Исполнитель.Исполнитель;
				НоваяСтрокаИсполнителей.ВремяВыполнения = УП_ОбщегоНазначения_Сервер.ПреобразоватьЧислоВВремя_Строка(ТекСтрока_Исполнитель.ВремяВыполнения);
				НоваяСтрокаИсполнителей.Сумма           = ТекСтрока_Исполнитель.Сумма;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
	
КонецПроцедуры

#Область ПроцедурыПрочихПроцедурИФункций

&НаКлиенте
Процедура ПриИзменении_ПолученАктОтЗаказчика()
	
	Если Объект.ПолученАктОтЗаказчика Тогда
		Элементы.ДатаПолученияАктаОтЗаказчика.Видимость = Истина;
	Иначе
		Элементы.ДатаПолученияАктаОтЗаказчика.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ВыполнитьПроверкуЗачетаПредоплатыНаСервере(ПараметрыЗаписи)
	
	//ТекстВопроса = "";
	//Для Каждого ТекСтрокаПроекты Из Объект.Проекты Цикл
	//	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	//	РезультатЗапросаПредоплаты = ДокументОбъект.ПолучитьРезультатЗапросаПредоплаты(ДокументОбъект.МоментВремени(), Объект.Контрагент, ТекСтрокаПроекты.Клиент, ТекСтрокаПроекты.Проект);
	//	ВыборкаПредоплаты = РезультатЗапросаПредоплаты.Выбрать();
	//	ВыборкаПредоплаты.Следующий();
	//	Если НЕ ЗначениеЗаполнено(ВыборкаПредоплаты.АналитикаУчетаПоКонтрагентам.Проект) Тогда
	//		ТекстВопроса = ТекстВопроса + "Имеется предоплата от контрагента по клиенту: """ + Строка(ВыборкаПредоплаты.АналитикаУчетаПоКонтрагентам.Клиент) + """. Зачесть оплату?"
	//	КонецЕсли;
	//КонецЦикла;
	//
	//Возврат ТекстВопроса;
	
КонецФункции

&НаКлиенте
Процедура ВопросОчисткиТабличнойЧасти(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Объект.Проекты.Очистить();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОсновнойДоговорНаСервере()
	
	Объект.Договор = Объект.Контрагент.ОсновнойДоговор;
	
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьСуммуВТабличнойЧасти()
	
	ТекущиеДанные = Элементы.Проекты.ТекущиеДанные;
	ВремяВыполненияЧисло = УП_ОбщегоНазначения_Сервер.ПреобразоватьВремя(ТекущиеДанные.ВремяВыполнения);
	ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ВремяВыполненияЧисло / 60;
	
КонецПроцедуры

#КонецОбласти

#Область ПроцедурыСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УП_РаботаСДокументамиСервер.Документ_ПриСозданииНаСервере(РеквизитФормыВЗначение("Объект"), ЭтотОбъект.Объект);
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Печать
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УП_РаботаСДокументамиКлиент.Документ_ПриОткрытии(Объект, Элементы);
	
	ПриИзменении_ПолученАктОтЗаказчика();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ТекущийОбъект.ПолученАктОтЗаказчика Тогда
		Если НЕ ЗначениеЗаполнено(ТекущийОбъект.ДатаПолученияАктаОтЗаказчика) Тогда
			Сообщение       = Новый СообщениеПользователю;
			Сообщение.Текст = "Необходимо указать дату поступления актов";
			Сообщение.Поле  = "Объект.ДатаПолученияАктаОтЗаказчика";
			Сообщение.УстановитьДанные(ТекущийОбъект);
			Сообщение.Сообщить();
			Отказ = Истина;
		КонецЕсли;
	Иначе
		ТекущийОбъект.ДатаПолученияАктаОтЗаказчика = '00010101';
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ПроцедурыСобытийЭлементовФормы

&НаКлиенте
Процедура ПроектыПроектПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Проекты.ТекущиеДанные;
	ТекущиеДанные.Сумма = УП_РаботаСДокументамиСервер.ПолучитьСуммуПроекта(ЭтотОбъект.Объект.Дата, ТекущиеДанные.Проект);
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	Для каждого ТекСтрока Из Объект.Проекты Цикл
		ПараметрыАналитики = Новый Структура();
		ПараметрыАналитики.Вставить("Контрагент", Объект.Контрагент);
		ПараметрыАналитики.Вставить("Клиент"    , ТекСтрока.Клиент);
		ПараметрыАналитики.Вставить("Проект"    , ТекСтрока.Проект);
		АналитикаУчетаПоКонтрагентам = УП_РаботаСДокументамиСервер.ЗначениеКлючаАналитики(ПараметрыАналитики);
		ТекСтрока.Сумма              = УП_РаботаСДокументамиСервер.ПолучитьТекущуюСтоимостьПроекта(Объект.Дата, АналитикаУчетаПоКонтрагентам);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолученАктОтЗаказчикаПриИзменении(Элемент)
	
	ПриИзменении_ПолученАктОтЗаказчика();
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтотОбъект, Объект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	ОбработкаВыбораНаСервере(ВыбранноеЗначение);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодборПроектов(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ДатаДокумента", Объект.Дата);
	ПараметрыФормы.Вставить("Контрагент"   , Объект.Контрагент);
	
	ПараметрЗаголовок = НСтр("ru = 'Подбор проектов в %Документ%'");
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПараметрЗаголовок = СтрЗаменить(ПараметрЗаголовок, "%Документ%", Объект.Ссылка);
	Иначе
		ПараметрЗаголовок = СтрЗаменить(ПараметрЗаголовок, "%Документ%", НСтр("ru = 'выполнение проектов'"));
	КонецЕсли;
	ПараметрыФормы.Вставить("Заголовок", ПараметрЗаголовок);
	
	ОткрытьФорму("Обработка.ПодборПроектов.Форма", ПараметрыФормы, ЭтаФорма, УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		ТекстВопроса = ВыполнитьПроверкуЗачетаПредоплатыНаСервере(ПараметрыЗаписи);
		Если ЗначениеЗаполнено(ТекстВопроса) Тогда
			Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, 0, КодВозвратаДиалога.Да, "Зачет предоплаты");
			Если Ответ = КодВозвратаДиалога.Да Тогда
				Объект.ЗачестьПредоплату = Истина;
			Иначе
				Объект.ЗачестьПредоплату = Ложь;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	
	Если Объект.Проекты.Количество() > 0 Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ВопросОчисткиТабличнойЧасти", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, "Табличная часть содержит строки. Очистить?", РежимДиалогаВопрос.ДаНет, 60);
	КонецЕсли;
	УстановитьОсновнойДоговорНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПроектыВремяВыполненияПриИзменении(Элемент)
	
	ПересчитатьСуммуВТабличнойЧасти();
	
КонецПроцедуры

&НаКлиенте
Процедура ПроектыЦенаПриИзменении(Элемент)
	
	ПересчитатьСуммуВТабличнойЧасти();
	
КонецПроцедуры

&НаКлиенте
Процедура ПроектыПриАктивизацииСтроки(Элемент)
	
	ТекущаяСтрока = Элементы.Проекты.ТекущиеДанные;
	
	Если НЕ ТекущаяСтрока = Неопределено Тогда
		ПараметрыСтруктуры = Новый Структура;
		ПараметрыСтруктуры.Вставить("Клиент", Элементы.Проекты.ТекущиеДанные.Клиент);
		ПараметрыСтруктуры.Вставить("Проект", Элементы.Проекты.ТекущиеДанные.Проект);
		
		СтруктураОтбора = Новый ФиксированнаяСтруктура(ПараметрыСтруктуры);
		Элементы.Исполнители.ОтборСтрок = СтруктураОтбора;
	КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнителиВремяВыполненияПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.Исполнители.ТекущиеДанные;
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПересчитатьСуммуИсполнителя");
	
	УП_ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(Объект, ТекущаяСтрока, СтруктураДействий);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроектыПередУдалением(Элемент, Отказ)
	
	ТекущаяСтрока = Элементы.Проекты.ТекущиеДанные;
	
	Если НЕ ТекущаяСтрока = Неопределено Тогда
		ПараметрыСтруктуры = Новый Структура;
		ПараметрыСтруктуры.Вставить("Клиент", Элементы.Проекты.ТекущиеДанные.Клиент);
		ПараметрыСтруктуры.Вставить("Проект", Элементы.Проекты.ТекущиеДанные.Проект);
		НайденныеСтроки = Объект.Исполнители.НайтиСтроки(ПараметрыСтруктуры);
		Для каждого НайденнаяСтрока Из НайденныеСтроки Цикл
			Объект.Исполнители.Удалить(НайденнаяСтрока.НомерСтроки - 1);
		КонецЦикла;
	КонецЕсли
	
КонецПроцедуры

#КонецОбласти