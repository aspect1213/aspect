#Область ОбластьПечати

Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Акт выполненных работ
	КомандаПечати                                = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати                 = "Документ.ВыполнениеПроектов";
	КомандаПечати.Идентификатор                  = "АктВыполненныхРабот";
	КомандаПечати.Представление                  = НСтр("ru = 'Акт выполненных работ'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
	КомандаПечати                                = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати                 = "Документ.ВыполнениеПроектов";
	КомандаПечати.Идентификатор                  = "АктВыполненныхРаботФаксимиле";
	КомандаПечати.Представление                  = НСтр("ru = 'Акт выполненных работ (факсимиле)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АктВыполненныхРабот") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "АктВыполненныхРабот", "АктВыполненныхРабот", 
		ПечатьАктаОбОказанииУслуг(МассивОбъектов), "Документ.ВыполнениеПроектов.ПФ_MXL_Акт");
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АктВыполненныхРаботФаксимиле") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "АктВыполненныхРаботФаксимиле", "АктВыполненныхРаботФаксимиле", 
		ПечатьАктаОбОказанииУслуг(МассивОбъектов, Истина), "Документ.ВыполнениеПроектов.ПФ_MXL_Акт");
	КонецЕсли;
	
КонецПроцедуры

Функция Печать_АктВыполненныхРабот(МассивОбъектов)
	
	ТабДокумент = Новый ТабличныйДокумент;
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВыполнениеПроектовПроекты.Ссылка.Контрагент КАК Контрагент,
	|	ВыполнениеПроектовПроекты.Клиент,
	|	ВыполнениеПроектовПроекты.Проект,
	|	ВыполнениеПроектовПроекты.Валюта,
	|	ВыполнениеПроектовПроекты.Сумма КАК Сумма,
	|	ЕСТЬNULL(УП_ВремяВыполнениеПроектов_ПланСрезПоследних.ВремяВыполнения, 0) КАК ВремяВыполнения_План,
	|	ЕСТЬNULL(СтоимостьЗаЧасРаботыСрезПоследних.ЦенаЗаЧасРаботы, 0) КАК ЦенаЗаЧасРаботы
	|ИЗ
	|	Документ.ВыполнениеПроектов.Проекты КАК ВыполнениеПроектовПроекты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УП_ВремяВыполнениеПроектов_План.СрезПоследних КАК УП_ВремяВыполнениеПроектов_ПланСрезПоследних
	|		ПО ВыполнениеПроектовПроекты.Ссылка.Контрагент = УП_ВремяВыполнениеПроектов_ПланСрезПоследних.АналитикаУчетаПоКонтрагентам.Контрагент
	|			И ВыполнениеПроектовПроекты.Клиент = УП_ВремяВыполнениеПроектов_ПланСрезПоследних.АналитикаУчетаПоКонтрагентам.Клиент
	|			И ВыполнениеПроектовПроекты.Проект = УП_ВремяВыполнениеПроектов_ПланСрезПоследних.АналитикаУчетаПоКонтрагентам.Проект
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтоимостьЗаЧасРаботы.СрезПоследних КАК СтоимостьЗаЧасРаботыСрезПоследних
	|		ПО ВыполнениеПроектовПроекты.Ссылка.Контрагент = СтоимостьЗаЧасРаботыСрезПоследних.Контрагент
	|ГДЕ
	|	ВыполнениеПроектовПроекты.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВыполнениеПроектовПроекты.Ссылка.Дата,
	|	ВыполнениеПроектовПроекты.НомерСтроки
	|ИТОГИ
	|	СУММА(Сумма)
	|ПО
	|	Контрагент";
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Результат = Запрос.Выполнить();
	Выборка_Контрагент = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Выборка_Контрагент.Следующий() Цикл
		Макет = ПолучитьМакет("АктВыполненныхРабот");
		
		// Заголовок
		Область_Заголовок                       = Макет.ПолучитьОбласть("Заголовок");
		Если МассивОбъектов.Количество() = 1 Тогда
			НомерАкта = ПолучитьНомерАкта(МассивОбъектов[0].Ссылка);
			ДатаАкта  = Формат(МассивОбъектов[0].Ссылка.Дата, "ДЛФ=DD");
		Иначе
			НомерАкта = ГрупповоеПолучениеНомераАкта(Выборка_Контрагент.Контрагент);
			ДатаАкта  = Формат(ТекущаяДата(), "ДЛФ=DD");
		КонецЕсли;
		Область_Заголовок.Параметры.НомерАкта   = НомерАкта;
		Область_Заголовок.Параметры.ДатаАкта    = ДатаАкта;
		Область_Заголовок.Параметры.Исполнитель = "Рыбаков Константин Александрович";
		Область_Заголовок.Параметры.Заказчик    = Выборка_Контрагент.Контрагент;
		ТабДокумент.Вывести(Область_Заголовок);
		
		// ШапкаТаблицы
		Область_ШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ТабДокумент.Вывести(Область_ШапкаТаблицы);
		
		Выборка_ДетальныеЗаписи = Выборка_Контрагент.Выбрать();
		ПП = 0;
		Пока Выборка_ДетальныеЗаписи.Следующий() Цикл
			ПП = ПП + 1;
			// Детали
			Область_Детали                               = Макет.ПолучитьОбласть("Детали");
			Область_Детали.Параметры.ПП                  = ПП;
			Область_Детали.Параметры.НаименованиеПроекта = СокрЛП(Выборка_ДетальныеЗаписи.Проект.Наименование);
			Область_Детали.Параметры.ЕдИзм               = "шт.";
			Область_Детали.Параметры.КолВо               = 1;
			Область_Детали.Параметры.Цена                = Формат(Выборка_ДетальныеЗаписи.Сумма, "ЧГ=0");
			Область_Детали.Параметры.Сумма               = Формат(Выборка_ДетальныеЗаписи.Сумма, "ЧГ=0");
			ТабДокумент.Вывести(Область_Детали);
		КонецЦикла;
		
		// Подвал
		Область_Подвал                              = Макет.ПолучитьОбласть("Подвал");
		Область_Подвал.Параметры.СуммаИтого         = Формат(Выборка_Контрагент.Сумма, "ЧГ=0");
		Область_Подвал.Параметры.СуммаИтогоПрописью = ЧислоПрописью(Выборка_Контрагент.Сумма, "Л = ru_RU; ДП = Ложь", "рубль, рубля, рублей, м, копейка, копейки, копеек, ж, 2");
		ТабДокумент.Вывести(Область_Подвал);
		
		// ПодписиСторон
		ЗапросКЛ = Новый Запрос;
		ЗапросКЛ.Текст =
		"ВЫБРАТЬ
		|	КонтактныеЛица.Наименование
		|ИЗ
		|	Справочник.КонтактныеЛица КАК КонтактныеЛица
		|ГДЕ
		|	КонтактныеЛица.Владелец = &Владелец
		|	И КонтактныеЛица.Основной";
		ЗапросКЛ.УстановитьПараметр("Владелец", Выборка_Контрагент.Контрагент);
		РезультатЗапросаКЛ = ЗапросКЛ.Выполнить();
		ПредставительЗаказчика = "/ ";
		Если НЕ РезультатЗапросаКЛ.Пустой() Тогда
			ВыборкаКЛ = РезультатЗапросаКЛ.Выбрать();
			ВыборкаКЛ.Следующий();
			ФИОПредставителяЗаказчика = ВыборкаКЛ.Наименование;
			ФИО      = СтрЗаменить(СокрЛП(ФИОПредставителяЗаказчика), " ", Символы.ПС);
			Фамилия  = СтрПолучитьСтроку(ФИО, 1);
			Имя      = СтрПолучитьСтроку(ФИО, 2);
			Отчество = СтрПолучитьСтроку(ФИО, 3);
			ПредставительЗаказчика = "/ " + Лев(Имя, 1) + "." + Лев(Отчество, 1) + "." + Фамилия;
		Иначе
			Сообщить("Для контрагента: """ + Строка(Выборка_Контрагент.Контрагент) + """ не определено основное контактное лицо...");
		КонецЕсли;
		Область_ПодписиСторон                                    = Макет.ПолучитьОбласть("ПодписиСторон");
		Область_ПодписиСторон.Параметры.ПредставительЗаказчика   = ПредставительЗаказчика;
		Область_ПодписиСторон.Параметры.ПредставительИсполнителя = "/ К.А.Рыбаков";
		ТабДокумент.Вывести(Область_ПодписиСторон);
		
		ТабДокумент.ОтображатьСетку     = Ложь;
		ТабДокумент.Защита              = Ложь;
		ТабДокумент.ТолькоПросмотр      = Истина;
		ТабДокумент.ОтображатьЗаголовки = Ложь;
		ТабДокумент.АвтоМасштаб         = Истина;
		ТабДокумент.ПолеСверху = 5;
		ТабДокумент.ПолеСлева  = 5;
		ТабДокумент.ПолеСнизу  = 5;
		ТабДокумент.ПолеСправа = 5;
		ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
		
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
	КонецЦикла;
	Возврат ТабДокумент;
	
КонецФункции

Функция ПечатьАктаОбОказанииУслуг(МассивОбъектов, Факсимиле = Ложь)
	
	ТабДокумент = Новый ТабличныйДокумент;
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВыполнениеПроектовПроекты.Ссылка,
	|	ВыполнениеПроектовПроекты.Ссылка.Контрагент КАК Контрагент,
	|	ВыполнениеПроектовПроекты.Ссылка.Договор КАК Договор,
	|	ВыполнениеПроектовПроекты.НомерСтроки,
	|	ВыполнениеПроектовПроекты.Клиент,
	|	ВыполнениеПроектовПроекты.Проект КАК Проект,
	|	ВыполнениеПроектовПроекты.ПроектПредставление,
	|	ВыполнениеПроектовПроекты.ВремяВыполнения,
	|	ВыполнениеПроектовПроекты.Валюта,
	|	ВыполнениеПроектовПроекты.Цена,
	|	ВыполнениеПроектовПроекты.Сумма КАК Сумма,
	|	ВыполнениеПроектовПроекты.Комментарий
	|ИЗ
	|	Документ.ВыполнениеПроектов.Проекты КАК ВыполнениеПроектовПроекты
	|ГДЕ
	|	ВыполнениеПроектовПроекты.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВыполнениеПроектовПроекты.Ссылка.Дата,
	|	ВыполнениеПроектовПроекты.НомерСтроки
	|ИТОГИ
	|	МАКСИМУМ(Договор),
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Проект),
	|	СУММА(Сумма)
	|ПО
	|	Контрагент";
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Результат = Запрос.Выполнить();
	Выборка_Контрагент = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Выборка_Контрагент.Следующий() Цикл
		Макет = ПолучитьМакет("ПФ_MXL_Акт");
		
		// Заголовок
		Область_Заголовок = Макет.ПолучитьОбласть("Заголовок");
		Если МассивОбъектов.Количество() = 1 Тогда
			НомерАкта = ПолучитьНомерАкта(МассивОбъектов[0].Ссылка);
			ДатаАкта  = Формат(МассивОбъектов[0].Ссылка.Дата, "ДЛФ=DD");
		Иначе
			НомерАкта = ГрупповоеПолучениеНомераАкта(Выборка_Контрагент.Контрагент);
			ДатаАкта  = Формат(ТекущаяДата(), "ДЛФ=DD");
		КонецЕсли;
		Область_Заголовок.Параметры.ТекстЗаголовка = "Акт № " + НомерАкта + " от " + Формат(ДатаАкта, "ДЛФ=DD");
		ТабДокумент.Вывести(Область_Заголовок);
		
		// Поставщик
		Область_Поставщик                       = Макет.ПолучитьОбласть("Поставщик");
		Наименование = "Индивидуальный предприниматель Рыбаков Константин Александрович";
		ИНН          = ", ИНН 732591480680";
		Адрес        = ", 432026, Ульяновская обл, Ульяновск г, Архитекторов б-р, дом № 11, корпус 2, квартира 13";
		Телефон      = ", тел.: +7 (960) 373-83-33";
		Банк         = ", р/с 40802810500000124308, в банке АО ""ТИНЬКОФФ БАНК"" Г. МОСКВА, БИК 044525974, к/с 30101810145250000974";
		ПредставлениеПоставщика = Наименование + ИНН + Адрес + Телефон + Банк;
		Область_Поставщик.Параметры.ПредставлениеПоставщика = ПредставлениеПоставщика;
		ТабДокумент.Вывести(Область_Поставщик);
		
		// Получатель
		Область_Получатель                                   = Макет.ПолучитьОбласть("Получатель");
		СведенияОЮрЛице = УП_ОбщегоНазначения_Сервер.СведенияОЮрЛице(Выборка_Контрагент.Контрагент);
		ИНН     = ?(ЗначениеЗаполнено(СведенияОЮрЛице.ИНН), ", ИНН " + СведенияОЮрЛице.ИНН, "");
		Адрес   = ?(ЗначениеЗаполнено(СведенияОЮрЛице.Адрес), ", " + СведенияОЮрЛице.Адрес, "");
		Телефон = ?(ЗначениеЗаполнено(СведенияОЮрЛице.Телефон), ", тел.: " + СведенияОЮрЛице.Телефон, "");
		ПредставлениеПолучателя = СведенияОЮрЛице.Наименование + ИНН + Адрес + Телефон;
		Область_Получатель.Параметры.ПредставлениеПолучателя = ПредставлениеПолучателя;
		Область_Получатель.Параметры.Основание               = ?(ЗначениеЗаполнено(Выборка_Контрагент.Договор), Выборка_Контрагент.Договор, "Без договора");
		ТабДокумент.Вывести(Область_Получатель);
		
		// ШапкаТаблицы
		Область_ШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ТабДокумент.Вывести(Область_ШапкаТаблицы);
		
		Выборка_ДетальныеЗаписи = Выборка_Контрагент.Выбрать();
		ПП = 0;
		Пока Выборка_ДетальныеЗаписи.Следующий() Цикл
			ПП = ПП + 1;
			Если Выборка_ДетальныеЗаписи.Ссылка.ПриПечатиКоличествоРавно1 Тогда
				Количество       = 1;
				ЕдиницаИзмерения = "шт";
				Цена             = Выборка_ДетальныеЗаписи.Сумма;
			Иначе
				Количество       = Цел(УП_ОбщегоНазначения_Сервер.ПреобразоватьВремя(Выборка_ДетальныеЗаписи.ВремяВыполнения) / 60);
				ЕдиницаИзмерения = "ч";
				Цена             = Выборка_ДетальныеЗаписи.Цена;
			КонецЕсли;
			// Строка
			Область_Строка                            = Макет.ПолучитьОбласть("Строка");
			Область_Строка.Параметры.НомерСтроки      = ПП;
			Область_Строка.Параметры.НоменклатураНаименование = Выборка_ДетальныеЗаписи.ПроектПредставление;
			Область_Строка.Параметры.Количество       = Количество;
			Область_Строка.Параметры.ЕдиницаИзмерения = ЕдиницаИзмерения;
			Область_Строка.Параметры.Цена             = Цена;
			Область_Строка.Параметры.Сумма            = Выборка_ДетальныеЗаписи.Сумма;
			ТабДокумент.Вывести(Область_Строка);
		КонецЦикла;
		
		// Итого
		Область_Итого                 = Макет.ПолучитьОбласть("Итого");
		Область_Итого.Параметры.Всего = Выборка_Контрагент.Сумма;
		ТабДокумент.Вывести(Область_Итого);
		
		// ИтогоНДС
		Область_ИтогоНДС                    = Макет.ПолучитьОбласть("ИтогоНДС");
		Область_ИтогоНДС.Параметры.НДС      = "Без налога (НДС)";
		Область_ИтогоНДС.Параметры.ВсегоНДС = "-";
		ТабДокумент.Вывести(Область_ИтогоНДС);
		
		// СуммаПрописью
		Область_СуммаПрописью                          = Макет.ПолучитьОбласть("СуммаПрописью");
		Область_СуммаПрописью.Параметры.ИтоговаяСтрока = "Всего наименований " + Строка(Выборка_Контрагент.Проект) + ", на сумму " + Формат(Выборка_Контрагент.Сумма, "ЧЦ=15; ЧДЦ=2") + " руб.";
		Область_СуммаПрописью.Параметры.СуммаПрописью  = ЧислоПрописью(Выборка_Контрагент.Сумма, ,"рубль, рубля, рублей, м, копейка, копейки, копеек, ж, 2");
		ТабДокумент.Вывести(Область_СуммаПрописью);
		
		// Подписи
		Если Факсимиле Тогда
			Область_ПодписиСторон = Макет.ПолучитьОбласть("ПодписиФаксимиле");
		Иначе
			Область_ПодписиСторон = Макет.ПолучитьОбласть("Подписи");
		КонецЕсли;
		Область_ПодписиСторон.Параметры.ДолжностьИНазваниеОрганизации = "ИП Рыбаков Константин Александрович";
		Область_ПодписиСторон.Параметры.ЗаместительПоПриказу          = "Рыбаков К.А.";
		Область_ПодписиСторон.Параметры.НазваниеЗаказчика             = СведенияОЮрЛице.Наименование;
		Область_ПодписиСторон.Параметры.ПредставительЗаказчика        = "";
		ТабДокумент.Вывести(Область_ПодписиСторон);
		
		ТабДокумент.ОтображатьСетку     = Ложь;
		ТабДокумент.Защита              = Ложь;
		ТабДокумент.ТолькоПросмотр      = Истина;
		ТабДокумент.ОтображатьЗаголовки = Ложь;
		ТабДокумент.АвтоМасштаб         = Истина;
		ТабДокумент.ПолеСверху = 5;
		ТабДокумент.ПолеСлева  = 5;
		ТабДокумент.ПолеСнизу  = 5;
		ТабДокумент.ПолеСправа = 5;
		ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
		
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
	КонецЦикла;
	Возврат ТабДокумент;
	
КонецФункции

#КонецОбласти

#Область ОбластьВспомогательныхПроцедурИФункций

// Получает номер акта
// ................................................................................
Функция ПолучитьНомерАкта(Ссылка)
	
	НомерАкта = 1;
	ЗапросАктов = Новый Запрос;
	ЗапросАктов.Текст =
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВыполнениеПроектов.Ссылка) КАК КоличествоАктов
	|ИЗ
	|	Документ.ВыполнениеПроектов КАК ВыполнениеПроектов
	|ГДЕ
	|	ВыполнениеПроектов.Контрагент = &Контрагент
	|	И ВыполнениеПроектов.Ссылка <> &Ссылка
	|	И ВыполнениеПроектов.Дата < &Дата";
	ЗапросАктов.УстановитьПараметр("Контрагент", Ссылка.Контрагент);
	ЗапросАктов.УстановитьПараметр("Ссылка"    , Ссылка);
	ЗапросАктов.УстановитьПараметр("Дата"      , Ссылка.Дата);
	РезультатЗапросаАктов = ЗапросАктов.Выполнить();
	Если НЕ РезультатЗапросаАктов.Пустой() Тогда
		ВыборкаАктов = РезультатЗапросаАктов.Выбрать();
		ВыборкаАктов.Следующий();
		КоличествоАктов = ВыборкаАктов.КоличествоАктов;
	Иначе
		КоличествоАктов = 0;
	КонецЕсли;
	НомерАкта = НомерАкта + КоличествоАктов;
	Возврат НомерАкта;
	
КонецФункции

// Получает номер акта
// ................................................................................
Функция ГрупповоеПолучениеНомераАкта(Контрагент)
	
	НомерАкта = 1;
	ЗапросАктов = Новый Запрос;
	ЗапросАктов.Текст =
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВыполнениеПроектов.Ссылка) КАК КоличествоАктов
	|ИЗ
	|	Документ.ВыполнениеПроектов КАК ВыполнениеПроектов
	|ГДЕ
	|	ВыполнениеПроектов.Контрагент = &Контрагент";
	ЗапросАктов.УстановитьПараметр("Контрагент", Контрагент);
	РезультатЗапросаАктов = ЗапросАктов.Выполнить();
	Если НЕ РезультатЗапросаАктов.Пустой() Тогда
		ВыборкаАктов = РезультатЗапросаАктов.Выбрать();
		ВыборкаАктов.Следующий();
		КоличествоАктов = ВыборкаАктов.КоличествоАктов;
	Иначе
		КоличествоАктов = 0;
	КонецЕсли;
	НомерАкта = НомерАкта + КоличествоАктов;
	Возврат НомерАкта;
	
КонецФункции

#КонецОбласти