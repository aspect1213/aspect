//////////////////////////////////////////////////////////////////////////////////
//// РАЗДЕЛ ПРОЦЕДУР И ФУНКЦИЙ

// Обработка проведения документа.
// ................................................................................
Процедура ОбработкаПроведения(Отказ, Режим)

	// регистр СостоянияПроектов
	Движения.СостоянияПроектов.Записывать = Истина;
	Для Каждого ТекСтрокаПроекты Из Проекты Цикл
		Движение                     = Движения.СостоянияПроектов.Добавить();
		Движение.Период              = Дата;
		Движение.Контрагент          = Контрагент;
		Движение.Проект              = ТекСтрокаПроекты.Проект;
		Движение.Состояние           = Перечисления.СостоянияПроектов.Согласован;
	КонецЦикла;
	
	// регистр СтоимостьПроектовРабот_План
	Движения.СтоимостьПроектов.Записывать = Истина;
	Для Каждого ТекСтрокаПроекты Из Проекты Цикл
		Движение                          = Движения.СтоимостьПроектов.Добавить();
		Движение.Период                   = Дата;
		Движение.Контрагент               = Контрагент;
		Движение.ВалютаПроекта            = ТекСтрокаПроекты.Валюта;
		Движение.ВалютаУчета              = Константы.ВалютаУчета.Получить();
		Движение.Проект                   = ТекСтрокаПроекты.Проект;
		Движение.СуммаПроекта             = ТекСтрокаПроекты.Сумма;
		Движение.СуммаПроектаВВалютеУчета = ТекСтрокаПроекты.Сумма*УП_ОбщегоНазначения_Сервер.ПолучитьАктуальныйКурсВалюты(Дата, ТекСтрокаПроекты.Валюта);
	КонецЦикла;
	
	// регистр ВремяВыполненияПроектов
	Движения.ВремяВыполненияПроектов.Записывать = Истина;
	Для Каждого ТекСтрокаПроекты Из Проекты Цикл
		Движение                      = Движения.ВремяВыполненияПроектов.Добавить();
		Движение.РегистраторСсылка    = Ссылка;
		Движение.Контрагент           = Контрагент;
		Движение.Проект               = ТекСтрокаПроекты.Проект;
		Движение.ВремяВыполнения_План = УП_ОбщегоНазначения_Сервер.ПреобразоватьВремя(ТекСтрокаПроекты.ВремяВыполнения);
		Движение.ВремяВыполнения_Факт = 0;
	КонецЦикла;
	
	// регистр ОбщиеДанныеПоПроектам
	Движения.ОбщиеДанныеПоПроектам.Записывать = Истина;
	Для Каждого ТекСтрокаПроекты Из Проекты Цикл
		Движение                     = Движения.ОбщиеДанныеПоПроектам.Добавить();
		Движение.Контрагент          = Контрагент;
		Движение.Проект              = ТекСтрокаПроекты.Проект;
		Движение.РуководительПроекта = ТекСтрокаПроекты.РуководительПроекта;
	КонецЦикла;
	
	// регистр УП_СтоимостьПроектов
	Движения.УП_СтоимостьПроектов.Записывать = Истина;
	Для Каждого ТекСтрокаПроекты Из Проекты Цикл
		ПараметрыАналитики = Новый Структура();
		ПараметрыАналитики.Вставить("Контрагент", Контрагент);
		ПараметрыАналитики.Вставить("Клиент"    , ТекСтрокаПроекты.Клиент);
		ПараметрыАналитики.Вставить("Проект"    , ТекСтрокаПроекты.Проект);
		
		Движение                              = Движения.УП_СтоимостьПроектов.Добавить();
		Движение.Период                       = Дата;
		Движение.АналитикаУчетаПоКонтрагентам = УП_РаботаСДокументамиСервер.ЗначениеКлючаАналитики(ПараметрыАналитики);
		Движение.Валюта                       = ТекСтрокаПроекты.Валюта;
		Движение.Сумма                        = ТекСтрокаПроекты.Сумма;
	КонецЦикла;
	
	// регистр УП_СостоянияПроектов
	Движения.УП_СостоянияПроектов.Записывать = Истина;
	Для Каждого ТекСтрокаПроекты Из Проекты Цикл
		ПараметрыАналитики = Новый Структура();
		ПараметрыАналитики.Вставить("Контрагент", Контрагент);
		ПараметрыАналитики.Вставить("Клиент"    , ТекСтрокаПроекты.Клиент);
		ПараметрыАналитики.Вставить("Проект"    , ТекСтрокаПроекты.Проект);
		
		Движение                              = Движения.УП_СостоянияПроектов.Добавить();
		Движение.Период                       = Дата;
		Движение.АналитикаУчетаПоКонтрагентам = УП_РаботаСДокументамиСервер.ЗначениеКлючаАналитики(ПараметрыАналитики);
		Движение.Состояние                    = Перечисления.СостоянияПроектов.Согласован;
	КонецЦикла;
	
	// регистр УП_ВремяВыполнениеПроектов_План
	Движения.УП_ВремяВыполнениеПроектов_План.Записывать = Истина;
	Для Каждого ТекСтрокаПроекты Из Проекты Цикл
		ПараметрыАналитики = Новый Структура();
		ПараметрыАналитики.Вставить("Контрагент", Контрагент);
		ПараметрыАналитики.Вставить("Клиент"    , ТекСтрокаПроекты.Клиент);
		ПараметрыАналитики.Вставить("Проект"    , ТекСтрокаПроекты.Проект);
		
		Движение                              = Движения.УП_ВремяВыполнениеПроектов_План.Добавить();
		Движение.Период                       = Дата;
		Движение.АналитикаУчетаПоКонтрагентам = УП_РаботаСДокументамиСервер.ЗначениеКлючаАналитики(ПараметрыАналитики);
		Движение.ВремяВыполнения              = УП_ОбщегоНазначения_Сервер.ПреобразоватьВремя(ТекСтрокаПроекты.ВремяВыполнения);
	КонецЦикла;
	
	// регистр УП_ОбщиеСведенияПоПроектам
	Движения.УП_ОбщиеСведенияПоПроектам.Записывать = Истина;
	Для Каждого ТекСтрокаПроекты Из Проекты Цикл
		ПараметрыАналитики = Новый Структура();
		ПараметрыАналитики.Вставить("Контрагент", Контрагент);
		ПараметрыАналитики.Вставить("Клиент"    , ТекСтрокаПроекты.Клиент);
		ПараметрыАналитики.Вставить("Проект"    , ТекСтрокаПроекты.Проект);
		
		Движение                              = Движения.УП_ОбщиеСведенияПоПроектам.Добавить();
		Движение.Период                       = Дата;
		Движение.АналитикаУчетаПоКонтрагентам = УП_РаботаСДокументамиСервер.ЗначениеКлючаАналитики(ПараметрыАналитики);
		Движение.РуководительПроекта          = ТекСтрокаПроекты.РуководительПроекта;
		Движение.ВыполнитьДо                  = ТекСтрокаПроекты.ВыполнитьДо;
	КонецЦикла;
	
	Движения.УП_ИсполнителиПроектов.Записывать = Истина;
	Движения.УП_СостоянияПроектовИсполнителей.Записывать = Истина;
	Для Каждого ТекСтрокаИсполнители Из Исполнители Цикл
		ПараметрыАналитики = Новый Структура();
		ПараметрыАналитики.Вставить("Контрагент", Контрагент);
		ПараметрыАналитики.Вставить("Клиент"    , ТекСтрокаИсполнители.Клиент);
		ПараметрыАналитики.Вставить("Проект"    , ТекСтрокаИсполнители.Проект);
		
		Движение                              = Движения.УП_ИсполнителиПроектов.Добавить();
		Движение.АналитикаУчетаПоКонтрагентам = УП_РаботаСДокументамиСервер.ЗначениеКлючаАналитики(ПараметрыАналитики);
		Движение.Исполнитель                  = ТекСтрокаИсполнители.Исполнитель;
		Движение.ВремяВыполнения              = УП_ОбщегоНазначения_Сервер.ПреобразоватьВремя(ТекСтрокаИсполнители.ВремяВыполнения);
		Движение.Сумма                        = ТекСтрокаИсполнители.Сумма;
		
		Движение                              = Движения.УП_СостоянияПроектовИсполнителей.Добавить();
		Движение.Период                       = Дата;
		Движение.Исполнитель                  = ТекСтрокаИсполнители.Исполнитель;
		Движение.АналитикаУчетаПоКонтрагентам = УП_РаботаСДокументамиСервер.ЗначениеКлючаАналитики(ПараметрыАналитики);
		Движение.Состояние                    = Перечисления.СостоянияПроектов.Согласован;
		
		// данные в НастройкаДоступаУдаленныхИсполнителей
		МенеджерЗаписи             = РегистрыСведений.НастройкаДоступаУдаленныхИсполнителей.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Исполнитель = ТекСтрокаИсполнители.Исполнитель;
		МенеджерЗаписи.Контрагент  = Контрагент;
		МенеджерЗаписи.Клиент      = ТекСтрокаИсполнители.Клиент;
		МенеджерЗаписи.Проект      = ТекСтрокаИсполнители.Проект;
		МенеджерЗаписи.Записать(Истина);
	КонецЦикла;
	
КонецПроцедуры