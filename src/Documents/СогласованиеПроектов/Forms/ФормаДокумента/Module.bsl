#Область ПрочиеОбработчикиСобытий

&НаКлиенте
Процедура УстановитьИнформационнуюНадпись()
	
	ИнформационнаяНадпись = ПолучитьИнформационнуюНадписьНаСервере();
	
КонецПроцедуры

&НаСервере
Функция ПолучитьИнформационнуюНадписьНаСервере()
	
	Возврат "Количество согласованных проектов: " + Объект.Проекты.Количество() + ". На общую стоимость: " + Формат(Объект.Проекты.Итог("Сумма"), "ЧГ=0") + " руб.";
	
КонецФункции

&НаСервере
Процедура УстановитьКонтактноеЛицо_Сервер()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	КонтактныеЛица.Ссылка
	|ИЗ
	|	Справочник.КонтактныеЛица КАК КонтактныеЛица
	|ГДЕ
	|	КонтактныеЛица.Владелец = &Владелец
	|	И КонтактныеЛица.Основной";
	Запрос.УстановитьПараметр("Владелец", Объект.Контрагент);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Объект.КонтактноеЛицо = Выборка.Ссылка;
	КонецЦикла;
	
	Объект.Проекты.Очистить();
	Объект.Исполнители.Очистить();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ПроектыПроектНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	//// отменяем стандартное поведение при начале выбора
	//СтандартнаяОбработка = ложь;
	//// получим форму для выбора
	//Форма = ПолучитьФорму("Справочник.Проекты.ФормаВыбора");
	//// добавим отбор по владельцу
	//ЭлементОтбора                = Форма.Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//ЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Контрагент");
	//ЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	//ЭлементОтбора.Использование  = Истина;
	//ЭлементОтбора.ПравоеЗначение = Объект.Контрагент;
	//// укажем что форма для выбора
	//Форма.Параметры.РежимВыбора = Истина;
	//// укажем куда поместить значение выбора
	//Форма.ВладелецФормы = Элементы.ПроектыПроект;
	//// откроем форму
	//Форма.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ПроектыПроектПриИзменении(Элемент)
	
	УстановитьИнформационнуюНадпись();
	
КонецПроцедуры

&НаКлиенте
Процедура КонтактноеЛицоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	// отменяем стандартное поведение при начале выбора
	СтандартнаяОбработка = ложь;
	// получим форму для выбора
	Форма = ПолучитьФорму("Справочник.КонтактныеЛица.ФормаВыбора");
	// добавим отбор по владельцу
	ЭлементОтбора                = Форма.Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Владелец");
	ЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.Использование  = Истина;
	ЭлементОтбора.ПравоеЗначение = Объект.Контрагент;
	// укажем что форма для выбора
	Форма.Параметры.РежимВыбора = Истина;
	// укажем куда поместить значение выбора
	Форма.ВладелецФормы = Элементы.КонтактноеЛицо;
	// откроем форму
	Форма.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	
	УстановитьКонтактноеЛицо_Сервер();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьИнформационнуюНадпись();
	ИН_Дата = "необходимо указать дату согласования";
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УП_РаботаСДокументамиСервер.Документ_ПриСозданииНаСервере(РеквизитФормыВЗначение("Объект"), ЭтотОбъект.Объект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроектыПриАктивизацииСтроки(Элемент)
	
	ТекущаяСтрока = Элементы.Проекты.ТекущиеДанные;
	
	Если НЕ ТекущаяСтрока = Неопределено Тогда
		ПараметрыСтруктуры = Новый Структура;
		ПараметрыСтруктуры.Вставить("Клиент", Элементы.Проекты.ТекущиеДанные.Клиент);
		ПараметрыСтруктуры.Вставить("Проект", Элементы.Проекты.ТекущиеДанные.Проект);
		
		СтруктураОтбора = Новый ФиксированнаяСтруктура(ПараметрыСтруктуры);
		Элементы.Исполнители.ОтборСтрок = СтруктураОтбора;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнителиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если Элементы.Проекты.ТекущиеДанные = Неопределено ИЛИ Копирование Тогда
		//Нельзя назначить исполнителя для несуществующего проекта
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнителиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		СтрокаТабличнойЧасти        = Элементы.Исполнители.ТекущиеДанные;
		СтрокаТабличнойЧасти.Клиент = Элементы.Проекты.ТекущиеДанные.Клиент;
		СтрокаТабличнойЧасти.Проект = Элементы.Проекты.ТекущиеДанные.Проект;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроектыВремяВыполненияПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.Проекты.ТекущиеДанные;
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПересчитатьСумму");
	
	УП_ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(Объект, ТекущаяСтрока, СтруктураДействий);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроектыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	ТекущаяСтрока = Элементы.Проекты.ТекущиеДанные;
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ЗаполнитьВалюту");
	
	УП_ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(Объект, ТекущаяСтрока, СтруктураДействий);
	
	Если НЕ ЗначениеЗаполнено(ТекущаяСтрока.РуководительПроекта) Тогда
		ТекущаяСтрока.РуководительПроекта = ПолучитьРуководителяПроектовНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьРуководителяПроектовНаСервере()
	
	Если ЗначениеЗаполнено(Объект.КонтактноеЛицо) Тогда
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Исполнители.Ссылка
		|ИЗ
		|	Справочник.КонтактныеЛица КАК КонтактныеЛица
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Исполнители КАК Исполнители
		|		ПО КонтактныеЛица.ФизическоеЛицо = Исполнители.ФизическоеЛицо
		|ГДЕ
		|	КонтактныеЛица.РуководительПроектов";
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		Если Выборка.Следующий() Тогда
			Возврат Выборка.Ссылка;
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ПроектыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если НЕ ЗначениеЗаполнено(Объект.Контрагент) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Контрагент не заполнен";
		Сообщение.Поле = "Объект.Контрагент";
		Сообщение.УстановитьДанные(Объект);
		Сообщение.Сообщить();
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроектыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	ПроектыПриАктивизацииСтроки(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнителиВремяВыполненияПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.Исполнители.ТекущиеДанные;
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПересчитатьСуммуИсполнителя");
	
	УП_ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(Объект, ТекущаяСтрока, СтруктураДействий);
	
КонецПроцедуры

#КонецОбласти